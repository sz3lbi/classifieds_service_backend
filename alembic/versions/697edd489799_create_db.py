"""create db

Revision ID: 697edd489799
Revises: 
Create Date: 2022-01-07 15:36:16.575145

"""
from typing import List, TypedDict

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "697edd489799"
down_revision = None
branch_labels = None
depends_on = None


class ScopesDict(TypedDict):
    scope_name: str
    description: str
    default: bool


scopes_list: List[ScopesDict] = [
    {
        "scope_name": "categories_create",
        "description": "Create categories.",
        "default": False,
    },
    {
        "scope_name": "categories_update",
        "description": "Update categories.",
        "default": False,
    },
    {
        "scope_name": "categories_delete",
        "description": "Delete categories.",
        "default": False,
    },
    {
        "scope_name": "cities_create",
        "description": "Create cities.",
        "default": False,
    },
    {
        "scope_name": "cities_update",
        "description": "Update cities.",
        "default": False,
    },
    {
        "scope_name": "cities_delete",
        "description": "Delete cities.",
        "default": False,
    },
    {
        "scope_name": "classifieds_create",
        "description": "Create classifieds.",
        "default": True,
    },
    {
        "scope_name": "classifieds_update",
        "description": "Update classifieds.",
        "default": True,
    },
    {
        "scope_name": "classifieds_delete",
        "description": "Delete classifieds.",
        "default": True,
    },
    {
        "scope_name": "conversations_users_get",
        "description": "Get conversations_users.",
        "default": True,
    },
    {
        "scope_name": "conversations_users_create",
        "description": "Create conversations_users.",
        "default": True,
    },
    {
        "scope_name": "conversations_users_delete",
        "description": "Delete conversations_users.",
        "default": False,
    },
    {
        "scope_name": "conversations_get",
        "description": "Get conversations.",
        "default": True,
    },
    {
        "scope_name": "conversations_create",
        "description": "Create conversations.",
        "default": True,
    },
    {
        "scope_name": "conversations_delete",
        "description": "Delete conversations.",
        "default": False,
    },
    {
        "scope_name": "images_create",
        "description": "Create images.",
        "default": True,
    },
    {
        "scope_name": "images_delete",
        "description": "Delete images.",
        "default": True,
    },
    {
        "scope_name": "messages_get",
        "description": "Get messages.",
        "default": True,
    },
    {
        "scope_name": "messages_create",
        "description": "Create messages.",
        "default": True,
    },
    {
        "scope_name": "messages_update",
        "description": "Update messages.",
        "default": False,
    },
    {
        "scope_name": "messages_delete",
        "description": "Delete messages.",
        "default": False,
    },
    {"scope_name": "scopes_get", "description": "Get scopes.", "default": False},
    {
        "scope_name": "scopes_create",
        "description": "Create scopes.",
        "default": False,
    },
    {
        "scope_name": "scopes_update",
        "description": "Update scopes.",
        "default": False,
    },
    {
        "scope_name": "users_scopes_get",
        "description": "Get users_scopes.",
        "default": False,
    },
    {
        "scope_name": "users_scopes_create",
        "description": "Create users_scopes.",
        "default": False,
    },
    {
        "scope_name": "users_scopes_delete",
        "description": "Delete users_scopes.",
        "default": False,
    },
    {"scope_name": "users_get", "description": "Get users.", "default": False},
    {
        "scope_name": "voivodeships_create",
        "description": "Create voivodeships.",
        "default": False,
    },
    {
        "scope_name": "voivodeships_update",
        "description": "Update voivodeships.",
        "default": False,
    },
    {
        "scope_name": "voivodeships_delete",
        "description": "Delete voivodeships.",
        "default": False,
    },
]


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=128), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "conversations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subject", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    scopes = op.create_table(
        "scopes",
        sa.Column("scope_name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=128), nullable=False),
        sa.Column("default", sa.Boolean(), nullable=False, default=False),
        sa.PrimaryKeyConstraint("scope_name"),
    )
    op.bulk_insert(scopes, scopes_list)
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=72), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "voivodeships",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("voivodeship_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["voivodeship_id"],
            ["voivodeships.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "conversations_users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("conversation_id", "user_id"),
    )
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(length=1024), nullable=False),
        sa.Column("displayed", sa.Boolean(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=False),
        sa.Column("author_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "sent",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_scopes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("scope_name", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["scope_name"],
            ["scopes.scope_name"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "scope_name"),
    )
    op.create_table(
        "classifieds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("title", sa.String(length=32), nullable=False),
        sa.Column("content", sa.String(length=8192), nullable=False),
        sa.Column("price", sa.Numeric(precision=16, scale=2), nullable=False),
        sa.Column(
            "status",
            sa.Enum("active", "hidden", name="classifiedstatus"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("extension", sa.String(length=8), nullable=False),
        sa.Column("classified_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classified_id"],
            ["classifieds.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("filename"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("images")
    op.drop_table("classifieds")
    op.drop_table("users_scopes")
    op.drop_table("messages")
    op.drop_table("conversations_users")
    op.drop_table("cities")
    op.drop_table("voivodeships")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("scopes")
    op.drop_table("conversations")
    op.drop_table("categories")
    # ### end Alembic commands ###
